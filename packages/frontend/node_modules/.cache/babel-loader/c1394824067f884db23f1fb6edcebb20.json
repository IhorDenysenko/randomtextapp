{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Typography,TextField,makeStyles,Card,CardContent,Divider}from'@material-ui/core';import'typeface-roboto';var useStyles=makeStyles(function(theme){return{paper:{marginTop:theme.spacing(20),display:'flex',flexDirection:'column',alignItems:'center',width:300,height:300},card_content:{backgroundColor:theme.palette.background.paper,marginTop:theme.spacing(3)},submit:{marginTop:theme.spacing(2),height:50},mainPart:{marginTop:theme.spacing(5)}};});var SignIn=function SignIn(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var classes=useStyles();var setUser=function setUser(event){event.preventDefault();if(username!==''){props.onUsernameChange(username);}};return React.createElement(Card,{className:classes.paper},React.createElement(CardContent,{className:classes.card_content},React.createElement(Typography,{gutterBottom:true,component:\"h1\",variant:\"h4\"},\"Sign in\"),React.createElement(Divider,{orientation:\"horizontal\"}),React.createElement(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,id:\"username\",label:\"Username\",name:\"username\",autoComplete:\"username\",className:classes.mainPart,autoFocus:true,value:username,onChange:function onChange(ev){return setUsername(ev.target.value);}}),React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit,onClick:setUser},\"Sign In\")));};export default SignIn;","map":{"version":3,"sources":["C:/Users/ihord/WebstormProjects/randomtextapp/packages/frontend/src/signin/SignIn.tsx"],"names":["React","useState","Button","Typography","TextField","makeStyles","Card","CardContent","Divider","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","width","height","card_content","backgroundColor","palette","background","submit","mainPart","SignIn","props","username","setUsername","classes","setUser","event","preventDefault","onUsernameChange","ev","target","value"],"mappings":"6KAAA,MAAQA,CAAAA,KAAR,EAAgBC,QAAhB,KAA2C,OAA3C,CACA,OAAQC,MAAR,CAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,UAAvC,CAA0DC,IAA1D,CAAgEC,WAAhE,CAA6EC,OAA7E,KAA2F,mBAA3F,CACA,MAAO,iBAAP,CAGA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAACK,KAAD,QAAmB,CAC5CC,KAAK,CAAE,CACLC,SAAS,CAAEF,KAAK,CAACG,OAAN,CAAc,EAAd,CADN,CAELC,OAAO,CAAE,MAFJ,CAGLC,aAAa,CAAE,QAHV,CAILC,UAAU,CAAE,QAJP,CAKLC,KAAK,CAAE,GALF,CAMLC,MAAM,CAAE,GANH,CADqC,CAS5CC,YAAY,CAAE,CACVC,eAAe,CAAEV,KAAK,CAACW,OAAN,CAAcC,UAAd,CAAyBX,KADhC,CAEVC,SAAS,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CAFD,CAT8B,CAa5CU,MAAM,CAAE,CACNX,SAAS,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL,CAENK,MAAM,CAAE,EAFF,CAboC,CAiB5CM,QAAQ,CAAE,CACNZ,SAAS,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL,CAjBkC,CAAnB,EAAD,CAA5B,CA0BA,GAAMY,CAAAA,MAA6B,CAAG,QAAhCA,CAAAA,MAAgC,CAACC,KAAD,CAAwB,eAE1BzB,QAAQ,CAAC,EAAD,CAFkB,wCAEnD0B,QAFmD,eAEzCC,WAFyC,eAG1D,GAAMC,CAAAA,OAAO,CAAGpB,SAAS,EAAzB,CAEA,GAAMqB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAA6B,CACzCA,KAAK,CAACC,cAAN,GAEA,GAAIL,QAAQ,GAAK,EAAjB,CAAqB,CACjBD,KAAK,CAACO,gBAAN,CAAuBN,QAAvB,EACH,CACJ,CAND,CAQA,MAEI,qBAAC,IAAD,EAAM,SAAS,CAAEE,OAAO,CAAClB,KAAzB,EAEI,oBAAC,WAAD,EAAc,SAAS,CAAEkB,OAAO,CAACV,YAAjC,EAEI,oBAAC,UAAD,EAAY,YAAY,KAAxB,CAAyB,SAAS,CAAC,IAAnC,CAAwC,OAAO,CAAC,IAAhD,YAFJ,CAMI,oBAAC,OAAD,EAAS,WAAW,CAAC,YAArB,EANJ,CAQI,oBAAC,SAAD,EACI,OAAO,CAAC,UADZ,CAEI,MAAM,CAAC,QAFX,CAGI,QAAQ,KAHZ,CAII,SAAS,KAJb,CAKI,EAAE,CAAC,UALP,CAMI,KAAK,CAAC,UANV,CAOI,IAAI,CAAC,UAPT,CAQI,YAAY,CAAC,UARjB,CASI,SAAS,CAAEU,OAAO,CAACL,QATvB,CAUI,SAAS,KAVb,CAWI,KAAK,CAAEG,QAXX,CAYI,QAAQ,CAAE,kBAAAO,EAAE,QAAIN,CAAAA,WAAW,CAACM,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAf,EAZhB,EARJ,CAuBI,oBAAC,MAAD,EACI,IAAI,CAAC,QADT,CAEI,SAAS,KAFb,CAGI,OAAO,CAAC,WAHZ,CAII,KAAK,CAAC,SAJV,CAKI,SAAS,CAAEP,OAAO,CAACN,MALvB,CAMI,OAAO,CAAEO,OANb,YAvBJ,CAFJ,CAFJ,CA0CH,CAvDD,CAyDA,cAAeL,CAAAA,MAAf","sourcesContent":["import  React, {useState, MouseEvent} from \"react\";\r\nimport {Button, Typography, TextField, makeStyles, Theme, Card, CardContent, Divider} from '@material-ui/core';\r\nimport 'typeface-roboto';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(20),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      width: 300,\r\n      height: 300\r\n    },\r\n    card_content: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing(2),\r\n      height: 50\r\n    },\r\n    mainPart: {\r\n        marginTop: theme.spacing(5)\r\n    },\r\n}));\r\n\r\ninterface SignInProps {\r\n    onUsernameChange: (username: string) => void;\r\n}\r\n\r\nconst SignIn: React.FC<SignInProps> = (props: SignInProps) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const classes = useStyles();\r\n\r\n    const setUser = (event: MouseEvent): void => {\r\n        event.preventDefault();\r\n\r\n        if (username !== '') {\r\n            props.onUsernameChange(username);\r\n        }\r\n    };\r\n\r\n    return (\r\n        \r\n        <Card className={classes.paper}>\r\n        \r\n            <CardContent  className={classes.card_content}>\r\n\r\n                <Typography gutterBottom component=\"h1\" variant=\"h4\">\r\n                Sign in\r\n                </Typography>\r\n\r\n                <Divider orientation=\"horizontal\" />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    className={classes.mainPart}\r\n                    autoFocus\r\n                    value={username} \r\n                    onChange={ev => setUsername(ev.target.value)} \r\n                />\r\n         \r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={setUser}\r\n                >\r\n                Sign In\r\n                </Button>\r\n\r\n            </CardContent>\r\n        </Card>        \r\n    );\r\n\r\n};\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}