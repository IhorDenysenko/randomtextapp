{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import io from\"socket.io-client\";import axios from\"axios\";import{SocketEvents}from\"@randomtext/shared\";export var APP_URL=process.env.REACT_APP_API_URL?process.env.REACT_APP_API_URL:\"\";var socket=io(APP_URL);export var subscribeToReceiveMessage=function subscribeToReceiveMessage(callback){socket.on(SocketEvents.RECEIVE_MESSAGE,function(data){return callback(data);});};export var unsubscribeToReceiveMessage=function unsubscribeToReceiveMessage(){socket.off(SocketEvents.RECEIVE_MESSAGE);};export var subscribeToOnJoined=function subscribeToOnJoined(callback){socket.on(SocketEvents.JOINED_CHAT,function(data){return callback(data);});};export var unsubscribeToOnJoined=function unsubscribeToOnJoined(){socket.off(SocketEvents.JOINED_CHAT);};export var subscribeToLeftChat=function subscribeToLeftChat(callback){socket.on(SocketEvents.LEFT_CHAT,function(data){return callback(data);});};export var unsubscribeToLeftChat=function unsubscribeToLeftChat(){socket.off(SocketEvents.LEFT_CHAT);};export var sendMessageToChatroom=function sendMessageToChatroom(username,chatroom,message){socket.emit(SocketEvents.SEND_MESSAGE,{author:username,message:message,chat:chatroom});};export var joinChatRoom=function joinChatRoom(username,chatname){socket.emit(SocketEvents.JOIN_ROOM,{author:username,chat:chatname});};export var leaveChatRoom=function leaveChatRoom(username,chatname){socket.emit(SocketEvents.LEAVE_ROOM,{author:username,chat:chatname});};export var loadMessageHistory=function loadMessageHistory(name,callback){return _regeneratorRuntime.async(function loadMessageHistory$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(axios.get(APP_URL+'/'+name).then(function(res){var messageData=res.data;callback(messageData);}));case 2:case\"end\":return _context.stop();}}});};export var loadChatRoomNames=function loadChatRoomNames(callback){return _regeneratorRuntime.async(function loadChatRoomNames$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(axios.get(APP_URL+\"/api/chatrooms\").then(function(res){var roomdata=res.data;callback(roomdata);}));case 2:case\"end\":return _context2.stop();}}});};","map":{"version":3,"sources":["C:/Users/ihord/WebstormProjects/randomtextapp/packages/frontend/src/api/SocketAPI.ts"],"names":["io","axios","SocketEvents","APP_URL","process","env","REACT_APP_API_URL","socket","subscribeToReceiveMessage","callback","on","RECEIVE_MESSAGE","data","unsubscribeToReceiveMessage","off","subscribeToOnJoined","JOINED_CHAT","unsubscribeToOnJoined","subscribeToLeftChat","LEFT_CHAT","unsubscribeToLeftChat","sendMessageToChatroom","username","chatroom","message","emit","SEND_MESSAGE","author","chat","joinChatRoom","chatname","JOIN_ROOM","leaveChatRoom","LEAVE_ROOM","loadMessageHistory","name","get","then","res","messageData","loadChatRoomNames","roomdata"],"mappings":"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","sourcesContent":["import io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\nimport {SocketEvents} from \"@randomtext/shared\";\r\n\r\n\r\nexport const APP_URL = process.env.REACT_APP_API_URL? process.env.REACT_APP_API_URL : \"\";\r\n\r\nconst socket = io(APP_URL);\r\n\r\nexport const subscribeToReceiveMessage = (callback: (data: string) => void) => {\r\n    socket.on(SocketEvents.RECEIVE_MESSAGE, (data: string) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToReceiveMessage = () => {\r\n    socket.off(SocketEvents.RECEIVE_MESSAGE);\r\n};\r\n\r\nexport const subscribeToOnJoined = (callback: (data: {chat: string}) => void) => {\r\n    socket.on(SocketEvents.JOINED_CHAT, (data: {chat: string}) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToOnJoined = () => {\r\n    socket.off(SocketEvents.JOINED_CHAT);\r\n};\r\n\r\nexport const subscribeToLeftChat = (callback: (data: {chat: string}) => void) => {\r\n    socket.on(SocketEvents.LEFT_CHAT, (data: {chat: string}) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToLeftChat = () => {\r\n    socket.off(SocketEvents.LEFT_CHAT);\r\n};\r\n\r\nexport const sendMessageToChatroom = (username: string, chatroom: string, message: string) => {\r\n    socket.emit(SocketEvents.SEND_MESSAGE, {\r\n        author: username,\r\n        message: message,\r\n        chat: chatroom\r\n    });\r\n};\r\n\r\nexport const joinChatRoom = (username: string, chatname: string) => {\r\n    socket.emit(SocketEvents.JOIN_ROOM, {\r\n        author: username,\r\n        chat: chatname\r\n    });\r\n};\r\n\r\nexport const leaveChatRoom = (username: string, chatname: string) => {\r\n    socket.emit(SocketEvents.LEAVE_ROOM, {\r\n        author: username,\r\n        chat: chatname\r\n    });\r\n};\r\n\r\nexport const loadMessageHistory = async (name: string, callback: (data: string[]) => void) => {\r\n    await axios.get(APP_URL+'/'+name)\r\n        .then(res => {\r\n            const messageData = res.data;\r\n            callback(messageData);\r\n        });\r\n};\r\n\r\nexport const loadChatRoomNames = async (callback: (data: string[]) => void) => {\r\n    await axios.get(APP_URL+`/api/chatrooms`)\r\n        .then(res => {\r\n            const roomdata = res.data;\r\n            callback(roomdata);\r\n        });\r\n};"]},"metadata":{},"sourceType":"module"}