{"ast":null,"code":"import io from\"socket.io-client\";import{SocketEvents}from\"@randomtext/shared/src/Events\";//const socket = io('https://randomtextapp.herokuapp.com/');\nvar socket=io('http://localhost:3000/');export var subscribeToReceiveMessage=function subscribeToReceiveMessage(callback){socket.on(SocketEvents.RECEIVE_MESSAGE,function(data){return callback(data);});};export var unsubscribeToReceiveMessage=function unsubscribeToReceiveMessage(){socket.off(SocketEvents.RECEIVE_MESSAGE);};export var subscribeToOnJoined=function subscribeToOnJoined(callback){socket.on(SocketEvents.JOINED_CHAT,function(data){return callback(data);});};export var unsubscribeToOnJoined=function unsubscribeToOnJoined(){socket.off(SocketEvents.JOINED_CHAT);};export var subscribeToLeftChat=function subscribeToLeftChat(callback){socket.on(SocketEvents.LEFT_CHAT,function(data){return callback(data);});};export var unsubscribeToLeftChat=function unsubscribeToLeftChat(){socket.off(SocketEvents.LEFT_CHAT);};export var sendMessageToChatroom=function sendMessageToChatroom(username,chatroom,message){socket.emit(SocketEvents.SEND_MESSAGE,{author:username,message:message,chat:chatroom});};export var joinChatRoom=function joinChatRoom(username,chatname){socket.emit(SocketEvents.JOIN_ROOM,{author:username,chat:chatname});};export var leaveChatRoom=function leaveChatRoom(username,chatname){socket.emit(SocketEvents.LEAVE_ROOM,{author:username,chat:chatname});};","map":{"version":3,"sources":["C:/Users/ihord/WebstormProjects/randomtextapp/packages/frontend/src/api/SocketAPI.ts"],"names":["io","SocketEvents","socket","subscribeToReceiveMessage","callback","on","RECEIVE_MESSAGE","data","unsubscribeToReceiveMessage","off","subscribeToOnJoined","JOINED_CHAT","unsubscribeToOnJoined","subscribeToLeftChat","LEFT_CHAT","unsubscribeToLeftChat","sendMessageToChatroom","username","chatroom","message","emit","SEND_MESSAGE","author","chat","joinChatRoom","chatname","JOIN_ROOM","leaveChatRoom","LEAVE_ROOM"],"mappings":"AAAA,MAAOA,CAAAA,EAAP,KAAe,kBAAf,CACA,OAAQC,YAAR,KAA2B,+BAA3B,CAGA;AACA,GAAMC,CAAAA,MAAM,CAAGF,EAAE,CAAC,wBAAD,CAAjB,CAEA,MAAO,IAAMG,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,QAAD,CAAsC,CAC3EF,MAAM,CAACG,EAAP,CAAUJ,YAAY,CAACK,eAAvB,CAAwC,SAACC,IAAD,QAAkBH,CAAAA,QAAQ,CAACG,IAAD,CAA1B,EAAxC,EACH,CAFM,CAIP,MAAO,IAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,EAAM,CAC7CN,MAAM,CAACO,GAAP,CAAWR,YAAY,CAACK,eAAxB,EACH,CAFM,CAIP,MAAO,IAAMI,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACN,QAAD,CAA8C,CAC7EF,MAAM,CAACG,EAAP,CAAUJ,YAAY,CAACU,WAAvB,CAAoC,SAACJ,IAAD,QAA0BH,CAAAA,QAAQ,CAACG,IAAD,CAAlC,EAApC,EACH,CAFM,CAIP,MAAO,IAAMK,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CACvCV,MAAM,CAACO,GAAP,CAAWR,YAAY,CAACU,WAAxB,EACH,CAFM,CAIP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACT,QAAD,CAA8C,CAC7EF,MAAM,CAACG,EAAP,CAAUJ,YAAY,CAACa,SAAvB,CAAkC,SAACP,IAAD,QAA0BH,CAAAA,QAAQ,CAACG,IAAD,CAAlC,EAAlC,EACH,CAFM,CAIP,MAAO,IAAMQ,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CACvCb,MAAM,CAACO,GAAP,CAAWR,YAAY,CAACa,SAAxB,EACH,CAFM,CAIP,MAAO,IAAME,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,QAAD,CAAmBC,QAAnB,CAAqCC,OAArC,CAAyD,CAC1FjB,MAAM,CAACkB,IAAP,CAAYnB,YAAY,CAACoB,YAAzB,CAAuC,CACnCC,MAAM,CAAEL,QAD2B,CAEnCE,OAAO,CAAEA,OAF0B,CAGnCI,IAAI,CAAEL,QAH6B,CAAvC,EAKH,CANM,CAQP,MAAO,IAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,QAAD,CAAmBQ,QAAnB,CAAwC,CAChEvB,MAAM,CAACkB,IAAP,CAAYnB,YAAY,CAACyB,SAAzB,CAAoC,CAChCJ,MAAM,CAAEL,QADwB,CAEhCM,IAAI,CAAEE,QAF0B,CAApC,EAIH,CALM,CAOP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACV,QAAD,CAAmBQ,QAAnB,CAAwC,CACjEvB,MAAM,CAACkB,IAAP,CAAYnB,YAAY,CAAC2B,UAAzB,CAAqC,CACjCN,MAAM,CAAEL,QADyB,CAEjCM,IAAI,CAAEE,QAF2B,CAArC,EAIH,CALM","sourcesContent":["import io from \"socket.io-client\";\r\nimport {SocketEvents} from \"@randomtext/shared/src/Events\";\r\n\r\n\r\n//const socket = io('https://randomtextapp.herokuapp.com/');\r\nconst socket = io('http://localhost:3000/');\r\n\r\nexport const subscribeToReceiveMessage = (callback: (data: string) => void) => {\r\n    socket.on(SocketEvents.RECEIVE_MESSAGE, (data: string) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToReceiveMessage = () => {\r\n    socket.off(SocketEvents.RECEIVE_MESSAGE);\r\n};\r\n\r\nexport const subscribeToOnJoined = (callback: (data: {chat: string}) => void) => {\r\n    socket.on(SocketEvents.JOINED_CHAT, (data: {chat: string}) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToOnJoined = () => {\r\n    socket.off(SocketEvents.JOINED_CHAT);\r\n};\r\n\r\nexport const subscribeToLeftChat = (callback: (data: {chat: string}) => void) => {\r\n    socket.on(SocketEvents.LEFT_CHAT, (data: {chat: string}) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToLeftChat = () => {\r\n    socket.off(SocketEvents.LEFT_CHAT);\r\n};\r\n\r\nexport const sendMessageToChatroom = (username: string, chatroom: string, message: string) => {\r\n    socket.emit(SocketEvents.SEND_MESSAGE, {\r\n        author: username,\r\n        message: message,\r\n        chat: chatroom\r\n    });\r\n};\r\n\r\nexport const joinChatRoom = (username: string, chatname: string) => {\r\n    socket.emit(SocketEvents.JOIN_ROOM, {\r\n        author: username,\r\n        chat: chatname\r\n    });\r\n};\r\n\r\nexport const leaveChatRoom = (username: string, chatname: string) => {\r\n    socket.emit(SocketEvents.LEAVE_ROOM, {\r\n        author: username,\r\n        chat: chatname\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}