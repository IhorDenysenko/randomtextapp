{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\packages\\\\frontend\\\\src\\\\chat\\\\ChatroomContainer.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { joinChatRoom } from \"../api/SocketAPI\";\nimport { makeStyles, createStyles, Card, Divider, Button, Typography, CardActions, CardContent, List, ListItem } from '@material-ui/core';\nimport 'typeface-roboto';\nconst useStyles = makeStyles(theme => createStyles({\n  card: {\n    height: 440,\n    width: 300,\n    marginTop: theme.spacing(12),\n    marginRight: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  card_content: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(1),\n    width: 300\n  },\n  chatroom_list: {\n    maxHeight: 350,\n    overflow: 'auto',\n    width: 300\n  },\n  button: {\n    display: 'block',\n    width: '100%'\n  }\n}));\n\nconst ChatroomContainer = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        chatrooms = _useState2[0],\n        setChatrooms = _useState2[1];\n\n  const classes = useStyles();\n  useEffect(() => {\n    const loadChatRooms = () => {\n      axios.get(`http://localhost:3000/api/chatrooms`).then(res => {\n        const roomdata = res.data;\n        setChatrooms(roomdata);\n      });\n    };\n\n    loadChatRooms();\n  }, []);\n\n  const handleChooseChatroom = ev => {\n    ev.preventDefault();\n    let target = ev.currentTarget.getAttribute('value');\n    joinChatRoom(props.username, target ? target : \"\");\n  };\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.card_content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" Chatrooms \"), React.createElement(Divider, {\n    orientation: \"horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.chatroom_list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, chatrooms.map(chatroom => {\n    return React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: handleChooseChatroom,\n      color: \"primary\",\n      value: chatroom,\n      name: chatroom,\n      fullWidth: true,\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, chatroom));\n  }))));\n};\n\nexport default ChatroomContainer;","map":{"version":3,"sources":["C:/Users/ihord/WebstormProjects/randomtextapp/packages/frontend/src/chat/ChatroomContainer.tsx"],"names":["React","useState","useEffect","axios","joinChatRoom","makeStyles","createStyles","Card","Divider","Button","Typography","CardActions","CardContent","List","ListItem","useStyles","theme","card","height","width","marginTop","spacing","marginRight","display","flexDirection","alignItems","card_content","backgroundColor","palette","background","paper","chatroom_list","maxHeight","overflow","button","ChatroomContainer","props","chatrooms","setChatrooms","classes","loadChatRooms","get","then","res","roomdata","data","handleChooseChatroom","ev","preventDefault","target","currentTarget","getAttribute","username","map","chatroom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport {joinChatRoom} from \"../api/SocketAPI\";\r\nimport {makeStyles, createStyles, Theme, Card, Divider, Button, Typography, CardActions, CardContent, List, ListItem } from '@material-ui/core';\r\nimport 'typeface-roboto';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    card: {\r\n        height: 440,\r\n        width: 300,\r\n        marginTop: theme.spacing(12),\r\n        marginRight: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    card_content: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: theme.spacing(1),\r\n        width: 300\r\n    },\r\n    chatroom_list: {\r\n        maxHeight: 350,\r\n        overflow: 'auto',\r\n        width: 300\r\n    },\r\n    button: {\r\n        display: 'block',\r\n        width: '100%'\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n    username: string;\r\n}\r\n\r\nconst ChatroomContainer: React.FC<Props> = (props: Props) => {\r\n\r\n    const [chatrooms, setChatrooms] = useState([]);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n\r\n        const loadChatRooms = (): void => {\r\n            axios.get(`http://localhost:3000/api/chatrooms`)\r\n                .then(res => {\r\n\r\n                    const roomdata = res.data;\r\n                    setChatrooms(roomdata);\r\n                });\r\n        };\r\n\r\n        loadChatRooms();\r\n\r\n    },[]);\r\n\r\n    const handleChooseChatroom = (ev: React.MouseEvent): void => {\r\n        ev.preventDefault();\r\n\r\n        let target = (ev.currentTarget as HTMLButtonElement).getAttribute('value');\r\n    \r\n        joinChatRoom(props.username, target? target : \"\");\r\n    };\r\n\r\n    return(\r\n            <Card className={classes.card}>\r\n\r\n                <CardContent className={classes.card_content}>\r\n                    <Typography gutterBottom variant=\"h4\" component=\"h2\"> Chatrooms </Typography>  \r\n                    <Divider orientation=\"horizontal\" />\r\n                </CardContent>\r\n                \r\n                <CardActions>              \r\n                <List className={classes.chatroom_list}>\r\n\r\n                    {chatrooms.map(chatroom => {\r\n                        return (\r\n                            <ListItem>       \r\n                                <Button \r\n                                onClick={handleChooseChatroom} \r\n                                color=\"primary\" \r\n                                value={chatroom}\r\n                                name={chatroom}\r\n                                fullWidth\r\n                                variant=\"contained\"> \r\n                                {chatroom}\r\n                                </Button>\r\n                            </ListItem>               \r\n                        );\r\n                    })}                    \r\n                    </List>    \r\n\r\n                </CardActions>\r\n            </Card>\r\n       \r\n    );\r\n\r\n};\r\n\r\nexport default ChatroomContainer;"]},"metadata":{},"sourceType":"module"}