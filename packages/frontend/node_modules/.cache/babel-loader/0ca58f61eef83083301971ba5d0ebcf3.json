{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\packages\\\\frontend\\\\src\\\\signin\\\\SignIn.tsx\";\nimport React, { useState } from \"react\";\nimport { Button, Typography, TextField, makeStyles, Card, CardContent, Divider } from '@material-ui/core';\nimport 'typeface-roboto';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(20),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: 300,\n    height: 300\n  },\n  card_content: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    marginTop: theme.spacing(2),\n    height: 50\n  },\n  mainPart: {\n    marginTop: theme.spacing(5)\n  }\n}));\n\nconst SignIn = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const classes = useStyles();\n\n  const setUser = event => {\n    event.preventDefault();\n\n    if (username !== '') {\n      props.onUsernameChange(username);\n    }\n  };\n\n  return React.createElement(Card, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.card_content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    component: \"h1\",\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(Divider, {\n    orientation: \"horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\",\n    autoComplete: \"username\",\n    className: classes.mainPart,\n    autoFocus: true,\n    value: username,\n    onChange: ev => setUsername(ev.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: setUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Sign In\")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/ihord/WebstormProjects/randomtextapp/packages/frontend/src/signin/SignIn.tsx"],"names":["React","useState","Button","Typography","TextField","makeStyles","Card","CardContent","Divider","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","width","height","card_content","backgroundColor","palette","background","submit","mainPart","SignIn","props","username","setUsername","classes","setUser","event","preventDefault","onUsernameChange","ev","target","value"],"mappings":"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","sourcesContent":["import  React, {useState, MouseEvent} from \"react\";\r\nimport {Button, Typography, TextField, makeStyles, Theme, Card, CardContent, Grid, Divider} from '@material-ui/core';\r\nimport 'typeface-roboto';\r\n\r\ninterface Props {\r\n    onUsernameChange: (username: string) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(20),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      width: 300,\r\n      height: 300\r\n    },\r\n    card_content: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    submit: {\r\n      marginTop: theme.spacing(2),\r\n      height: 50\r\n    },\r\n    mainPart: {\r\n        marginTop: theme.spacing(5)\r\n    },\r\n  }));\r\n\r\n\r\nconst SignIn: React.FC<Props> = (props: Props) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const classes = useStyles();\r\n\r\n    const setUser = (event: MouseEvent): void => {\r\n        event.preventDefault();\r\n\r\n        if (username !== '') {\r\n            props.onUsernameChange(username);\r\n        }\r\n    };\r\n\r\n    return (\r\n        \r\n        <Card className={classes.paper}>\r\n        \r\n            <CardContent  className={classes.card_content}>\r\n\r\n                <Typography gutterBottom component=\"h1\" variant=\"h4\">\r\n                Sign in\r\n                </Typography>\r\n\r\n                <Divider orientation=\"horizontal\" />\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    className={classes.mainPart}\r\n                    autoFocus\r\n                    value={username} onChange={ev => setUsername(ev.target.value)} \r\n                />\r\n         \r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={setUser}\r\n                >\r\n                Sign In\r\n                </Button>\r\n\r\n            </CardContent>\r\n        </Card>        \r\n    );\r\n\r\n};\r\n\r\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}