{"ast":null,"code":"import io from \"socket.io-client\";\nimport { SocketEvents } from \"@randomtext/shared\"; //const socket = io('https://randomtextapp.herokuapp.com/');\n\nconst socket = io(process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL : \"\");\nexport const subscribeToReceiveMessage = callback => {\n  socket.on(SocketEvents.RECEIVE_MESSAGE, data => callback(data));\n};\nexport const unsubscribeToReceiveMessage = () => {\n  socket.off(SocketEvents.RECEIVE_MESSAGE);\n};\nexport const subscribeToOnJoined = callback => {\n  socket.on(SocketEvents.JOINED_CHAT, data => callback(data));\n};\nexport const unsubscribeToOnJoined = () => {\n  socket.off(SocketEvents.JOINED_CHAT);\n};\nexport const subscribeToLeftChat = callback => {\n  socket.on(SocketEvents.LEFT_CHAT, data => callback(data));\n};\nexport const unsubscribeToLeftChat = () => {\n  socket.off(SocketEvents.LEFT_CHAT);\n};\nexport const sendMessageToChatroom = (username, chatroom, message) => {\n  socket.emit(SocketEvents.SEND_MESSAGE, {\n    author: username,\n    message: message,\n    chat: chatroom\n  });\n};\nexport const joinChatRoom = (username, chatname) => {\n  socket.emit(SocketEvents.JOIN_ROOM, {\n    author: username,\n    chat: chatname\n  });\n};\nexport const leaveChatRoom = (username, chatname) => {\n  socket.emit(SocketEvents.LEAVE_ROOM, {\n    author: username,\n    chat: chatname\n  });\n};","map":{"version":3,"sources":["C:/Users/ihord/WebstormProjects/randomtextapp/packages/frontend/src/api/SocketAPI.ts"],"names":["io","SocketEvents","socket","process","env","REACT_APP_API_URL","subscribeToReceiveMessage","callback","on","RECEIVE_MESSAGE","data","unsubscribeToReceiveMessage","off","subscribeToOnJoined","JOINED_CHAT","unsubscribeToOnJoined","subscribeToLeftChat","LEFT_CHAT","unsubscribeToLeftChat","sendMessageToChatroom","username","chatroom","message","emit","SEND_MESSAGE","author","chat","joinChatRoom","chatname","JOIN_ROOM","leaveChatRoom","LEAVE_ROOM"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAAQC,YAAR,QAA2B,oBAA3B,C,CAEA;;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA+BF,OAAO,CAACC,GAAR,CAAYC,iBAA3C,GAA+D,EAAhE,CAAjB;AAEA,OAAO,MAAMC,yBAAyB,GAAIC,QAAD,IAAsC;AAC3EL,EAAAA,MAAM,CAACM,EAAP,CAAUP,YAAY,CAACQ,eAAvB,EAAyCC,IAAD,IAAkBH,QAAQ,CAACG,IAAD,CAAlE;AACH,CAFM;AAIP,OAAO,MAAMC,2BAA2B,GAAG,MAAM;AAC7CT,EAAAA,MAAM,CAACU,GAAP,CAAWX,YAAY,CAACQ,eAAxB;AACH,CAFM;AAIP,OAAO,MAAMI,mBAAmB,GAAIN,QAAD,IAA8C;AAC7EL,EAAAA,MAAM,CAACM,EAAP,CAAUP,YAAY,CAACa,WAAvB,EAAqCJ,IAAD,IAA0BH,QAAQ,CAACG,IAAD,CAAtE;AACH,CAFM;AAIP,OAAO,MAAMK,qBAAqB,GAAG,MAAM;AACvCb,EAAAA,MAAM,CAACU,GAAP,CAAWX,YAAY,CAACa,WAAxB;AACH,CAFM;AAIP,OAAO,MAAME,mBAAmB,GAAIT,QAAD,IAA8C;AAC7EL,EAAAA,MAAM,CAACM,EAAP,CAAUP,YAAY,CAACgB,SAAvB,EAAmCP,IAAD,IAA0BH,QAAQ,CAACG,IAAD,CAApE;AACH,CAFM;AAIP,OAAO,MAAMQ,qBAAqB,GAAG,MAAM;AACvChB,EAAAA,MAAM,CAACU,GAAP,CAAWX,YAAY,CAACgB,SAAxB;AACH,CAFM;AAIP,OAAO,MAAME,qBAAqB,GAAG,CAACC,QAAD,EAAmBC,QAAnB,EAAqCC,OAArC,KAAyD;AAC1FpB,EAAAA,MAAM,CAACqB,IAAP,CAAYtB,YAAY,CAACuB,YAAzB,EAAuC;AACnCC,IAAAA,MAAM,EAAEL,QAD2B;AAEnCE,IAAAA,OAAO,EAAEA,OAF0B;AAGnCI,IAAAA,IAAI,EAAEL;AAH6B,GAAvC;AAKH,CANM;AAQP,OAAO,MAAMM,YAAY,GAAG,CAACP,QAAD,EAAmBQ,QAAnB,KAAwC;AAChE1B,EAAAA,MAAM,CAACqB,IAAP,CAAYtB,YAAY,CAAC4B,SAAzB,EAAoC;AAChCJ,IAAAA,MAAM,EAAEL,QADwB;AAEhCM,IAAAA,IAAI,EAAEE;AAF0B,GAApC;AAIH,CALM;AAOP,OAAO,MAAME,aAAa,GAAG,CAACV,QAAD,EAAmBQ,QAAnB,KAAwC;AACjE1B,EAAAA,MAAM,CAACqB,IAAP,CAAYtB,YAAY,CAAC8B,UAAzB,EAAqC;AACjCN,IAAAA,MAAM,EAAEL,QADyB;AAEjCM,IAAAA,IAAI,EAAEE;AAF2B,GAArC;AAIH,CALM","sourcesContent":["import io from \"socket.io-client\";\r\nimport {SocketEvents} from \"@randomtext/shared\";\r\n\r\n//const socket = io('https://randomtextapp.herokuapp.com/');\r\nconst socket = io(process.env.REACT_APP_API_URL? process.env.REACT_APP_API_URL : \"\");\r\n\r\nexport const subscribeToReceiveMessage = (callback: (data: string) => void) => {\r\n    socket.on(SocketEvents.RECEIVE_MESSAGE, (data: string) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToReceiveMessage = () => {\r\n    socket.off(SocketEvents.RECEIVE_MESSAGE);\r\n};\r\n\r\nexport const subscribeToOnJoined = (callback: (data: {chat: string}) => void) => {\r\n    socket.on(SocketEvents.JOINED_CHAT, (data: {chat: string}) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToOnJoined = () => {\r\n    socket.off(SocketEvents.JOINED_CHAT);\r\n};\r\n\r\nexport const subscribeToLeftChat = (callback: (data: {chat: string}) => void) => {\r\n    socket.on(SocketEvents.LEFT_CHAT, (data: {chat: string}) => callback(data));\r\n};\r\n\r\nexport const unsubscribeToLeftChat = () => {\r\n    socket.off(SocketEvents.LEFT_CHAT);\r\n};\r\n\r\nexport const sendMessageToChatroom = (username: string, chatroom: string, message: string) => {\r\n    socket.emit(SocketEvents.SEND_MESSAGE, {\r\n        author: username,\r\n        message: message,\r\n        chat: chatroom\r\n    });\r\n};\r\n\r\nexport const joinChatRoom = (username: string, chatname: string) => {\r\n    socket.emit(SocketEvents.JOIN_ROOM, {\r\n        author: username,\r\n        chat: chatname\r\n    });\r\n};\r\n\r\nexport const leaveChatRoom = (username: string, chatname: string) => {\r\n    socket.emit(SocketEvents.LEAVE_ROOM, {\r\n        author: username,\r\n        chat: chatname\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}