{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ihord\\\\WebstormProjects\\\\randomtextapp\\\\packages\\\\frontend\\\\src\\\\chat\\\\ChatContainer.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Chat from './Chat';\nimport { makeStyles, createStyles, Typography, Card } from '@material-ui/core';\nimport { subscribeToOnJoined, unsubscribeToOnJoined, subscribeToLeftChat, unsubscribeToLeftChat, leaveChatRoom } from '../api/SocketAPI';\nconst useStyles = makeStyles(theme => createStyles({\n  paper: {\n    height: 440,\n    width: 500,\n    marginTop: theme.spacing(12),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  paper_content: {\n    marginTop: theme.spacing(24),\n    alignItems: 'center'\n  }\n}));\n\nconst ChatContainer = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        chatname = _useState2[0],\n        setChatname = _useState2[1];\n\n  const classes = useStyles();\n  useEffect(() => {\n    subscribeToOnJoined(data => {\n      if (chatname !== '') {\n        leaveChatRoom(props.username, chatname);\n        setChatname('');\n      }\n\n      setChatname(data.chat);\n    });\n    return () => {\n      unsubscribeToOnJoined();\n    };\n  }, [chatname]);\n  useEffect(() => {\n    subscribeToLeftChat(data => {\n      if (chatname === data.chat) {\n        setChatname('');\n      }\n    });\n    return () => {\n      unsubscribeToLeftChat();\n    };\n  }, [chatname]);\n  return React.createElement(Card, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, chatname !== '' ? React.createElement(Chat, {\n    username: props.username,\n    name: chatname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }) : React.createElement(Typography, {\n    className: classes.paper_content,\n    variant: \"h4\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" Join Chat And Start Messaging \"));\n};\n\nexport default ChatContainer;","map":{"version":3,"sources":["C:/Users/ihord/WebstormProjects/randomtextapp/packages/frontend/src/chat/ChatContainer.tsx"],"names":["React","useState","useEffect","Chat","makeStyles","createStyles","Typography","Card","subscribeToOnJoined","unsubscribeToOnJoined","subscribeToLeftChat","unsubscribeToLeftChat","leaveChatRoom","useStyles","theme","paper","height","width","marginTop","spacing","display","flexDirection","alignItems","paper_content","ChatContainer","props","chatname","setChatname","classes","data","username","chat"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAA0CC,UAA1C,EAAsDC,IAAtD,QAAiE,mBAAjE;AACA,SACIC,mBADJ,EAEIC,qBAFJ,EAGIC,mBAHJ,EAIIC,qBAJJ,EAKIC,aALJ,QAMO,kBANP;AASA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,IAC3BT,YAAY,CAAC;AACXU,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,GADL;AAEHC,IAAAA,KAAK,EAAE,GAFJ;AAGHC,IAAAA,SAAS,EAAEJ,KAAK,CAACK,OAAN,CAAc,EAAd,CAHR;AAIHC,IAAAA,OAAO,EAAE,MAJN;AAKHC,IAAAA,aAAa,EAAE,QALZ;AAMHC,IAAAA,UAAU,EAAE;AANT,GADI;AASXC,EAAAA,aAAa,EAAE;AACXL,IAAAA,SAAS,EAAEJ,KAAK,CAACK,OAAN,CAAc,EAAd,CADA;AAEXG,IAAAA,UAAU,EAAE;AAFD;AATJ,CAAD,CADc,CAA5B;;AAsBA,MAAME,aAA8B,GAAIC,KAAD,IAAkB;AAAA,oBAErBxB,QAAQ,CAAC,EAAD,CAFa;AAAA;AAAA,QAE9CyB,QAF8C;AAAA,QAEpCC,WAFoC;;AAGrD,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AAEZM,IAAAA,mBAAmB,CAAEqB,IAAD,IAAyB;AAEzC,UAAGH,QAAQ,KAAK,EAAhB,EAAmB;AAEfd,QAAAA,aAAa,CAACa,KAAK,CAACK,QAAP,EAAiBJ,QAAjB,CAAb;AACAC,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH;;AAEDA,MAAAA,WAAW,CAACE,IAAI,CAACE,IAAN,CAAX;AACH,KATkB,CAAnB;AAWA,WAAM,MAAM;AACRtB,MAAAA,qBAAqB;AACxB,KAFD;AAGH,GAhBQ,EAgBP,CAACiB,QAAD,CAhBO,CAAT;AAkBAxB,EAAAA,SAAS,CAAC,MAAM;AAEZQ,IAAAA,mBAAmB,CAAEmB,IAAD,IAAU;AAE1B,UAAGH,QAAQ,KAAKG,IAAI,CAACE,IAArB,EAA0B;AACtBJ,QAAAA,WAAW,CAAC,EAAD,CAAX;AACH;AAEJ,KANkB,CAAnB;AAQA,WAAM,MAAM;AACRhB,MAAAA,qBAAqB;AACxB,KAFD;AAGH,GAbQ,EAaP,CAACe,QAAD,CAbO,CAAT;AAeA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACb,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQW,QAAQ,KAAK,EAAb,GACQ,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAED,KAAK,CAACK,QAAtB;AAAgC,IAAA,IAAI,EAAEJ,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,GAMQ,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEE,OAAO,CAACL,aAA/B;AAA8C,IAAA,OAAO,EAAC,IAAtD;AAA2D,IAAA,SAAS,EAAC,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCARhB,CADJ;AAcH,CApDD;;AAsDA,eAAeC,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Chat from './Chat';\r\nimport { makeStyles, createStyles, Theme, Typography, Card} from '@material-ui/core';\r\nimport {\r\n    subscribeToOnJoined,\r\n    unsubscribeToOnJoined,\r\n    subscribeToLeftChat,\r\n    unsubscribeToLeftChat,\r\n    leaveChatRoom\r\n} from '../api/SocketAPI';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n        height: 440,\r\n        width: 500,\r\n        marginTop: theme.spacing(12),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    paper_content: {      \r\n        marginTop: theme.spacing(24),\r\n        alignItems: 'center'\r\n    },\r\n  }),\r\n);\r\n\r\n\r\ninterface Props {\r\n    username: string;\r\n}\r\n\r\nconst ChatContainer: React.FC<Props> = (props: Props) => {\r\n\r\n    const [chatname, setChatname] = useState('');\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n\r\n        subscribeToOnJoined((data:{chat: string}) => {\r\n\r\n            if(chatname !== ''){\r\n\r\n                leaveChatRoom(props.username, chatname);\r\n                setChatname('');\r\n            }\r\n\r\n            setChatname(data.chat);\r\n        });\r\n\r\n        return() => {\r\n            unsubscribeToOnJoined();\r\n        };\r\n    },[chatname]);\r\n\r\n    useEffect(() => {\r\n\r\n        subscribeToLeftChat((data) => {\r\n\r\n            if(chatname === data.chat){\r\n                setChatname('');\r\n            }\r\n\r\n        });\r\n\r\n        return() => {\r\n            unsubscribeToLeftChat();\r\n        };\r\n    },[chatname]);\r\n\r\n    return (\r\n        <Card className={classes.paper}>\r\n            {\r\n                chatname !== '' ? (\r\n                        <Chat username={props.username} name={chatname}/>\r\n                    )\r\n                    :\r\n                    (\r\n                        \r\n                        <Typography className={classes.paper_content} variant=\"h4\" component=\"h2\"> Join Chat And Start Messaging </Typography>\r\n                    )\r\n            }\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ChatContainer;"]},"metadata":{},"sourceType":"module"}